---
- name: Ensure lighthouse group exists
  group:
    name: "{{ lighthouse_group }}"
    state: present
  become: true
  register: lighthouse_group_details

- name: Create lighthouse user
  user:
    comment:  lighthouse client user
    name: "{{ lighthouse_user }}"
    group: "{{ lighthouse_group }}"
  become: true
  register: lighthouse_user_details

- name: Create directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ lighthouse_user }}"
    group: "{{ lighthouse_group }}"
  loop:
    - "{{ lighthouse_base_dir }}"
    - "{{ lighthouse_install_dir }}"    
    - "{{ lighthouse_config_dir }}"   
    - "{{ lighthouse_keys_dir }}"
    - "{{ lighthouse_wallet_dir }}"    
    - "{{ lighthouse_secrets_dir }}" 
    - "{{ lighthouse_data_dir }}"
    - "{{ lighthouse_data_dir }}"
    - "{{ lighthouse_validator_data_dir }}"
    - "{{ lighthouse_log_dir }}"
  become: true

- name: Setup logrotate
  template:
    src: "logrotate/lighthouse"
    dest: "/etc/logrotate.d/lighthouse"
  become: true

- name: Extract lighthouse source to install directory
  unarchive:
    src: "{{ lighthouse_download_url }}"
    remote_src: true
    dest: "{{ lighthouse_install_dir }}"
    owner: "{{ lighthouse_user }}"
    group: "{{ lighthouse_group }}"
    mode: '0777'
  become: true
  register: extract_src

- name: Create a symlink to current
  file:
    src: "{{ lighthouse_install_dir }}/"
    dest: "{{ lighthouse_current_dir }}"
    state: link
  register: create_symlink
  become: true

- name: Set updated optionally to trigger a systemd restart at the end
  set_fact:
    lighthouse_state_updates: "{{ lighthouse_state_updates + ['lighthouse.install_dir'] }}"
    lighthouse_state_updates_validator: "{{ lighthouse_state_updates_validator + ['lighthouse.install_dir'] }}"
    lighthouse_state_updates_beacon: "{{ lighthouse_state_updates_beacon + ['lighthouse.install_dir'] }}"
  when: "extract_src is changed or create_symlink is changed"