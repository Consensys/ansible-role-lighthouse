---
- name: Add basics to the validator cmdline_args
  ansible.builtin.set_fact:
    _lighthouse_validator_internal_cmdline_args: >
      {{_lighthouse_validator_internal_cmdline_args | join(' ') }}
      --network={{lighthouse_network}}
      --debug-level={{lighthouse_log_level}}
      --logfile-debug-level={{lighthouse_log_level}}
      --logfile={{lighthouse_log_dir}}/validator.log
      --log-format=JSON
      --beacon-nodes="{{ lighthouse_validator_beaconnodes }}"
      --validators-dir="{{ lighthouse_keys_dir }}"
      --secrets-dir="{{ lighthouse_secrets_dir }}"
      --suggested-fee-recipient={{lighthouse_default_fee_recipient}}
      --init-slashing-protection

- name: Add enable-doppelganger-protection to the validator cmdline_args
  ansible.builtin.set_fact:
    _lighthouse_validator_internal_cmdline_args: >
      {{_lighthouse_validator_internal_cmdline_args}}
      --enable-doppelganger-protection
  when: lighthouse_enable_doppelganger_protection|bool == True


- name: Add fee receipt to the validator cmdline_args
  ansible.builtin.set_fact:
    _lighthouse_validator_internal_cmdline_args: >
      {{_lighthouse_validator_internal_cmdline_args}}
      --graffiti='{{lighthouse_graffiti}}'
  when: lighthouse_graffiti != ""

- name: Add log rotation configuration
  ansible.builtin.set_fact:
    _lighthouse_validator_internal_cmdline_args: >
      {{_lighthouse_validator_internal_cmdline_args}}
      --logfile-max-number={{ lighthouse_log_max_number }}
      --logfile-max-size={{ lighthouse_log_max_size }}

- name: Add custom cli args if provided
  ansible.builtin.set_fact:
    _lighthouse_validator_internal_cmdline_args: >
      {{_lighthouse_validator_internal_cmdline_args}}
      {{ lighthouse_validator_cmdline_args | join(' ') }}
  when: lighthouse_validator_cmdline_args != []

- name: Sanitize validator cmdline_args
  ansible.builtin.set_fact:
    _lighthouse_validator_internal_cmdline_args: "{{_lighthouse_validator_internal_cmdline_args | replace('\n', '') | replace('\"', '')}}"

- name: Show validator cmdline_args
  ansible.builtin.debug:
    msg: "{{_lighthouse_validator_internal_cmdline_args}}"

- name: Create lighthouse-validator systemd service
  ansible.builtin.template:
    src: "lighthouse-validator.service.j2"
    dest: "{{ lighthouse_systemd_dir }}/lighthouse-validator.service"
    owner: "root"
    group: "root"
  become: true
  register: validator_systemd_file

- name: Set updated optionally to trigger a systemd restart at the end
  ansible.builtin.set_fact:
    lighthouse_state_updates_validator: "{{ lighthouse_state_updates_validator + ['lighthouse.validator_systemd_file'] }}"
  when: validator_systemd_file is changed

- name: Reload systemd to reread configs
  ansible.builtin.systemd:
    daemon_reload: yes
  become: true
  when: validator_systemd_file is changed

- name: Enable and start lighthouse-validator service
  ansible.builtin.systemd:
    name: lighthouse-validator
    state: "{{ lighthouse_systemd_state }}"
    enabled: true
  become: true
  when: lighthouse_state_updates_validator|length > 0
